{"version":3,"sources":["store.js","panels/Settings.jsx","panels/Game.jsx","panels/Home.jsx","img/persik.png","panels/Persik.js","panels/T.jsx","panels/Test.jsx","App.js","index.js"],"names":["isStateChanged","STORAGE_KEYS","THEME","SIDE","MODE","VIBRATION","HINT","a","bridge","send","keys","Object","values","data","setData","KEY","value","key","sides","three","four","five","six","seven","modes","classical","alphabetical","hard","themes","green","red","white","Settings","fetchedData","devMode","id","useState","side","currentSide","setCurrentSide","mode","currentMode","setCurrentMode","theme","currentTheme","setCurrentTheme","vibrationOn","isVibrationOn","setIsVibrationOn","hintOn","isHintOn","setIsHintOn","header","defaultValue","onChange","e","target","map","index","disabled","after","defaultChecked","onClick","top","Game","state","Home","go","fetchedUser","React","activeStory","setActiveStory","setState","onStoryChange","useEffect","fetchData","then","result","Panel","Epic","tabbar","Tabbar","TabbarItem","selected","text","View","activePanel","PanelHeader","Group","Persik","left","PanelHeaderBack","className","src","persik","alt","T","Test","FormLayout","FormItem","status","email","bottom","Input","type","name","placeholder","FormLayoutGroup","showPatronym","removable","onRemove","CellButton","Select","options","label","Radio","addressItems","purpose","Textarea","Checkbox","Link","Button","size","stretched","App","setActivePanel","setUser","ScreenSpinner","setPopout","user","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","path","ReactDOM","render","getElementById"],"mappings":"ilBAUWA,GAAiB,EAEfC,EAAe,CAC1BC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,UAAW,cACXC,KAAM,U,4CAGD,WAAyBL,GAAzB,eAAAM,EAAA,sEACcC,IAAOC,KAAK,qBAAsB,CACnDC,KAAMC,OAAOC,OAAOX,KAFjB,cACCY,EADD,OAILb,GAAiB,EAJZ,kBAKEa,GALF,4C,sBAQA,SAAeC,EAAtB,oC,4CAAO,WAAuBC,EAAKC,GAA5B,SAAAT,EAAA,sEAECC,IAAOC,KAAK,qBAAsB,CACtCQ,IAAKF,EACLC,MAAOA,IAJJ,OAMLhB,GAAiB,EANZ,4C,iCCdDkB,EAAQ,CACZC,MAAO,QACPC,KAAM,QACNC,KAAM,QACNC,IAAK,QACLC,MAAO,SAEHC,EAAQ,CACZC,UAAW,2EACXC,aAAc,+DACdC,KAAM,aAEFC,EAAS,CACbC,MAAO,2EACPC,IAAK,4EACLC,MAAO,iEAgJMC,EA3IE,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,YAAiBC,GAAoB,EAAxBC,GAAwB,EAApBD,SAASxB,EAAW,EAAXA,KAAW,EACjB0B,mBAASH,EAAYI,MADJ,mBAChDC,EADgD,KACnCC,EADmC,OAEjBH,mBAASH,EAAYO,MAFJ,mBAEhDC,EAFgD,KAEnCC,EAFmC,OAGfN,mBAASH,EAAYU,OAHN,mBAGhDC,EAHgD,KAGlCC,EAHkC,OAKbT,mBACb,QAA3BH,EAAYa,aANyC,mBAKhDC,EALgD,KAKjCC,EALiC,OAQvBZ,mBAA+B,QAAtBH,EAAYgB,QARE,mBAQhDC,EARgD,KAQtCC,EARsC,KAmDvD,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAQ,cAAC,IAAD,CAAQZ,KAAK,YAAb,4CAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEa,aAAcZ,EACda,SA7Ba,SAACC,GACxBb,EAAea,EAAEC,OAAOxC,OACxBF,EAAQJ,EAAKN,KAAMmD,EAAEC,OAAOxC,QAyBpB,SAIGL,OAAOD,KAAKc,GAAOiC,KAAI,SAACxC,EAAKyC,GAAN,OACtB,wBAAQ1C,MAAOC,EAAf,SACGO,EAAMP,IADgByC,YAOjC,cAAC,IAAD,CAAON,OAAQ,cAAC,IAAD,CAAQZ,KAAK,YAAb,6FAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEa,aAAcf,EACdgB,SA/Ca,SAACC,GACxBhB,EAAegB,EAAEC,OAAOxC,OACxBF,EAAQJ,EAAKP,KAAMoD,EAAEC,OAAOxC,QA2CpB,SAIGL,OAAOD,KAAKQ,GAAOuC,KAAI,SAACxC,EAAKyC,GAAN,OACtB,wBAAQ1C,MAAOC,EAAf,SACGC,EAAMD,IADgByC,YAQjC,cAAC,IAAD,CACEN,OAAQ,cAAC,IAAD,CAAQZ,KAAK,YAAb,oJADV,SAGE,cAAC,IAAD,UACE,cAAC,IAAD,CACEa,aAAcT,EACdU,SAjDc,SAACC,GACzBV,EAAgBU,EAAEC,OAAOxC,OACzBF,EAAQJ,EAAKR,MAAOqD,EAAEC,OAAOxC,QA6CrB,SAIGL,OAAOD,KAAKkB,GAAQ6B,KAAI,SAACxC,EAAKyC,GAAN,OACvB,wBAAQ1C,MAAOC,EAAf,SACGW,EAAOX,IADeyC,YAQjC,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,UAAQ,EACRC,MACE,cAAC,IAAD,CACEC,iBAAgBd,EAChBe,QAzEgB,WAC5Bd,GAAkBD,GAElBjC,EAAQJ,EAAKL,UAAW0C,EAAgB,QAAU,WAiE5C,gFAWA,cAAC,IAAD,CACEY,UAAQ,EACRC,MACE,cAAC,IAAD,CACEC,iBAAgBX,EAChBY,QAxEW,WACvBX,GAAY,SAACD,GAAD,OAAeA,KAE3BpC,EAAQJ,EAAKJ,KAAM4C,EAAW,QAAU,WAgElC,uEAaDhB,GACC,eAAC,IAAD,CAAU6B,IAAI,gHAAd,UACE,iDAAoBtB,KACpB,iDAAoBH,KACpB,0CAAaM,KACb,8CAAiBG,EAAgB,OAAS,WAC1C,yCAAYG,EAAW,OAAS,oBClJ7Bc,EAhBF,SAAC,GAAwB,IAAtB9B,EAAqB,EAArBA,QAAS+B,EAAY,EAAZA,MACvB,OACE,cAAC,IAAD,UACG/B,GAAW+B,GACV,eAAC,IAAD,CAAUF,IAAI,gHAAd,UACE,iDAAoBE,EAAMzB,QAC1B,iDAAoByB,EAAM5B,QAC1B,0CAAa4B,EAAMtB,SACnB,8CAAiBsB,EAAMnB,eACvB,yCAAYmB,EAAMhB,gB,kBC8FbiB,EAnEF,SAAC,GAA6B,IAA3B/B,EAA0B,EAA1BA,GAA0B,KAAtBgC,GAAsB,EAAlBC,YACgBC,IAAMjC,SAAS,SADb,mBACjCkC,EADiC,KACpBC,EADoB,OAEdF,IAAMjC,SAAS,MAFD,mBAEjC6B,EAFiC,KAE1BO,EAF0B,KAGlCC,EAAgB,SAAClB,GAAD,OAAOgB,EAAehB,IAgB5C,OAdAc,IAAMK,WAAU,YHxBX,SAAP,mCGyBIC,CAAU1E,GAAc2E,MAAK,SAACC,GAC5BL,EAAS,CACP7B,MAAOkC,EAAOnE,KAAK,GAAGM,MACtBqB,KAAMwC,EAAOnE,KAAK,GAAGM,MACrBwB,KAAMqC,EAAOnE,KAAK,GAAGM,MACrB8B,YAAa+B,EAAOnE,KAAK,GAAGM,MAC5BiC,OAAQ4B,EAAOnE,KAAK,GAAGM,aAI1B,CAAChB,IAIF,cAAC8E,EAAA,EAAD,CAAO3C,GAAIA,EAAX,SACE,eAAC4C,EAAA,EAAD,CACET,YAAaA,EACbU,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEpB,QAAS,kBAAMW,EAAc,SAC7BU,SAA0B,SAAhBb,EACVc,KAAK,2BAHP,SAKE,cAAC,IAAD,MAEF,cAACF,EAAA,EAAD,CACEpB,QAAS,kBAAMW,EAAc,aAC7BU,SAA0B,aAAhBb,EACVc,KAAK,yDAHP,SAKE,cAAC,IAAD,SAhBR,UAqBE,cAACC,EAAA,EAAD,CAAMlD,GAAG,OAAOmD,YAAY,OAA5B,SACE,eAACR,EAAA,EAAD,CAAO3C,GAAG,OAAV,UACE,cAACoD,EAAA,EAAD,uCACA,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAMtD,QAhDH,KAgDsB+B,MAAOA,WAItC,cAACoB,EAAA,EAAD,CAAMlD,GAAG,WAAWmD,YAAY,WAAhC,SACE,eAACR,EAAA,EAAD,CAAO3C,GAAG,WAAV,UACE,cAACoD,EAAA,EAAD,qEACA,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CACEtD,QAzDC,KA0DDxB,KAAMT,EACNgC,YAAagC,iB,QChGd,MAA0B,mCCmB1BwB,G,OATA,SAAC,GAAD,IAAGtD,EAAH,EAAGA,GAAIgC,EAAP,EAAOA,GAAP,OACb,eAACW,EAAA,EAAD,CAAO3C,GAAIA,EAAX,UACE,cAACoD,EAAA,EAAD,CAAaG,KAAM,cAACC,EAAA,EAAD,CAAiB7B,QAAS,kBAAMK,EAAG,WAAtD,oBAGA,qBAAKyB,UAAU,SAASC,IAAKC,EAAQC,IAAI,wB,QCT9BC,I,SC2JAC,EAjIF,SAAC,GAAe,EAAb9D,GAAa,EAATgC,GAAU,IAAD,EACWE,IAAMjC,SAAS,QAD1B,6BAI3B,OACE,cAACiD,EAAA,EAAD,CAAMC,YAAY,WAAlB,SACE,eAACR,EAAA,EAAD,CAAO3C,GAAG,WAAV,UACE,cAACoD,EAAA,EAAD,iFACA,cAACC,EAAA,EAAD,UACE,eAACU,WAAD,WACE,cAACC,SAAD,CACEpC,IAAI,SACJqC,OAAQC,MAAQ,QAAU,QAC1BC,OACED,MACI,+KACA,6MANR,SASE,cAACE,MAAD,CACEC,KAAK,QACLC,KAAK,QACLzF,MAAOqF,MACP/C,SAAU,EAAKA,aAInB,cAAC6C,SAAD,CAAUpC,IAAI,uCAAd,SACE,cAACwC,MAAD,CAAOC,KAAK,WAAWE,YAAY,sFAGrC,cAACP,SAAD,CAAUG,OAAO,+RAAjB,SACE,cAACC,MAAD,CAAOC,KAAK,WAAWE,YAAY,kGAGrC,eAACC,gBAAD,CAAiBnE,KAAK,aAAtB,UACE,cAAC2D,SAAD,CAAUpC,IAAI,qBAAd,SACE,cAACwC,MAAD,MAEF,cAACJ,SAAD,CAAUpC,IAAI,6CAAd,SACE,cAACwC,MAAD,SAIF,EAAKtC,MAAM2C,aAKX,cAACT,SAAD,CACEU,WAAS,EACTC,SAAU,EAAKA,SACf/C,IAAI,mDACJuC,OAAO,oOAJT,SAME,cAACC,MAAD,MAVF,cAACQ,WAAD,CAAYjD,QAAS,kBAAM,EAAKU,SAAS,CAAEoC,cAAc,KAAzD,yGAcF,cAACT,SAAD,CAAUpC,IAAI,qBAAd,SACE,cAACiD,OAAD,CACEN,YAAY,sEACZO,QAAS,CACP,CACEjG,MAAO,IACPkG,MAAO,8CAET,CACElG,MAAO,IACPkG,MAAO,mDAMf,eAACf,SAAD,CAAUpC,IAAI,4EAAd,UACE,cAACoD,MAAD,CAAOV,KAAK,OAAZ,wDACA,cAACU,MAAD,CAAOV,KAAK,OAAZ,qDAGD,EAAKW,aAAa3D,KAAI,gBAAGyD,EAAH,EAAGA,MAAOT,EAAV,EAAUA,KAAV,OACrB,cAACN,SAAD,CAAUpC,IAAKmD,EAAf,SACE,cAACX,MAAD,CAAOE,KAAMA,KADYA,MAI7B,cAACN,SAAD,CACEpC,IAAI,sEACJuC,OAAQe,QAAU,GAAK,+KACvBjB,OAAQiB,QAAU,QAAU,QAH9B,SAKE,cAACL,OAAD,CACEN,YAAY,uHACZpD,SAAU,EAAKA,SACftC,MAAOqG,QACPZ,KAAK,UACLQ,QAAS,CACP,CACEjG,MAAO,IACPkG,MAAO,gGAET,CACElG,MAAO,IACPkG,MAAO,6HAET,CACElG,MAAO,IACPkG,MAAO,yLAKf,cAACf,SAAD,CAAUpC,IAAI,kCAAd,SACE,cAACuD,SAAD,MAEF,eAACC,SAAD,qGACmB,cAACC,KAAD,0CAEnB,cAACrB,SAAD,UACE,cAACsB,EAAA,EAAD,CAAQC,KAAK,IAAIC,WAAS,EAA1B,uIC1GCC,EAlCH,WAAO,IAAD,EACsBxF,mBAAS,QAD/B,mBACTkD,EADS,KACIuC,EADJ,OAEezF,mBAAS,MAFxB,mBAETgC,EAFS,KAEI0D,EAFJ,OAGY1F,mBAAS,cAAC2F,EAAA,EAAD,CAAeL,KAAK,WAHzC,mBAGDM,GAHC,WAKhBtD,qBAAU,WAAM,4CAQd,4BAAAnE,EAAA,sEACqBC,IAAOC,KAAK,uBADjC,OACQwH,EADR,OAEEH,EAAQG,GACRD,EAAU,MAHZ,4CARc,sBACdxH,IAAO0H,WAAU,YAAiC,IAAD,IAA7BC,OAAU3B,EAAmB,EAAnBA,KAAM3F,EAAa,EAAbA,KAClC,GAAa,yBAAT2F,EAAiC,CACnC,IAAM4B,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBpH,MAAQH,EAAK0H,OAAS1H,EAAK0H,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,OAL5B,mCAadzD,KACC,IAEH,IAAMR,EAAK,SAACwE,GACVd,EAAec,IAGjB,OACE,eAACtD,EAAA,EAAD,CAAMC,YAAaA,EAAnB,UACE,cAAC,EAAD,CAAMnD,GAAG,OAAOiC,YAAaA,EAAaD,GAAIA,IAC9C,cAAC,EAAD,CAAQhC,GAAG,SAASgC,GAAIA,IACxB,cAAC,EAAD,CAAMhC,GAAG,UAAUgC,GAAIA,QC/B7B3D,IAAOC,KAAK,gBAEZmI,IAASC,OAAO,cAAC,EAAD,IAASR,SAASS,eAAe,W","file":"static/js/main.e80b1c89.chunk.js","sourcesContent":["import bridge from \"@vkontakte/vk-bridge\";\r\n\r\nconst state = {\r\n  side: \"five\",\r\n  mode: \"classical\",\r\n  theme: \"green\",\r\n  vibration: false,\r\n  hint: false,\r\n};\r\n\r\nexport let isStateChanged = true;\r\n\r\nexport const STORAGE_KEYS = {\r\n  THEME: \"theme\",\r\n  SIDE: \"side\",\r\n  MODE: \"mode\",\r\n  VIBRATION: \"vibrationOn\",\r\n  HINT: \"hintOn\",\r\n}; //todo constanta\r\n\r\nexport async function fetchData(STORAGE_KEYS) {\r\n  const data = await bridge.send(\"VKWebAppStorageGet\", {\r\n    keys: Object.values(STORAGE_KEYS),\r\n  });\r\n  isStateChanged = false;\r\n  return data;\r\n}\r\n\r\nexport async function setData(KEY, value) {\r\n  //if (Object.keys(STORAGE_KEYS).includes(KEY))\r\n  await bridge.send(\"VKWebAppStorageSet\", {\r\n    key: KEY,\r\n    value: value,\r\n  });\r\n  isStateChanged = true;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Div,\r\n  FormItem,\r\n  NativeSelect,\r\n  FormLayout,\r\n  Group,\r\n  Header,\r\n  Cell,\r\n  SimpleCell,\r\n  Switch,\r\n} from \"@vkontakte/vkui\";\r\n\r\nconst sides = {\r\n  three: \"3 x 3\",\r\n  four: \"4 x 4\",\r\n  five: \"5 x 5\",\r\n  six: \"6 x 6\",\r\n  seven: \"7 x 7\",\r\n};\r\nconst modes = {\r\n  classical: \"Классический\",\r\n  alphabetical: \"Алфавитный\",\r\n  hard: \"Hard mode\",\r\n};\r\nconst themes = {\r\n  green: \"Классическая\",\r\n  red: \"Красно-черная\",\r\n  white: \"Черно-белая\",\r\n};\r\n\r\nimport { setData } from \"../store\";\r\n\r\nconst Settings = ({ fetchedData, id, devMode, keys }) => {\r\n  const [currentSide, setCurrentSide] = useState(fetchedData.side);\r\n  const [currentMode, setCurrentMode] = useState(fetchedData.mode);\r\n  const [currentTheme, setCurrentTheme] = useState(fetchedData.theme); //\r\n\r\n  const [isVibrationOn, setIsVibrationOn] = useState(\r\n    fetchedData.vibrationOn == \"true\"\r\n  );\r\n  const [isHintOn, setIsHintOn] = useState(fetchedData.hintOn == \"true\");\r\n\r\n  // useEffect(() => {\r\n  //   async function fetchData() {\r\n  //     const data = await bridge.send(\"VKWebAppStorageGet\", {\r\n  //       keys: Object.values(STORAGE_KEYS),\r\n  //     });\r\n  //     console.log(data);\r\n  //   }\r\n  //   //console.log(data);\r\n\r\n  //   //updateData();\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  //TODO: апишку прокинуть в другое место\r\n\r\n  const handleSideChange = (e) => {\r\n    setCurrentSide(e.target.value);\r\n    setData(keys.SIDE, e.target.value);\r\n  };\r\n  const handleModeChange = (e) => {\r\n    setCurrentMode(e.target.value);\r\n    setData(keys.MODE, e.target.value);\r\n  };\r\n  const handleVibrationChange = () => {\r\n    setIsVibrationOn(!isVibrationOn);\r\n\r\n    setData(keys.VIBRATION, isVibrationOn ? \"false\" : \"true\");\r\n    //console.log(keys.VIBRATION, isVibrationOn.toString());\r\n  };\r\n\r\n  const handleThemeChange = (e) => {\r\n    setCurrentTheme(e.target.value);\r\n    setData(keys.THEME, e.target.value);\r\n  };\r\n\r\n  const handleHintChange = () => {\r\n    setIsHintOn((isHintOn) => !isHintOn);\r\n\r\n    setData(keys.HINT, isHintOn ? \"false\" : \"true\");\r\n  };\r\n\r\n  return (\r\n    <Div>\r\n      <FormLayout>\r\n        <Group header={<Header mode=\"secondary\">Режим</Header>}>\r\n          <Div>\r\n            <NativeSelect\r\n              defaultValue={currentMode}\r\n              onChange={handleModeChange}\r\n            >\r\n              {Object.keys(modes).map((key, index) => (\r\n                <option value={key} key={index}>\r\n                  {modes[key]}\r\n                </option>\r\n              ))}\r\n            </NativeSelect>\r\n          </Div>\r\n        </Group>\r\n        <Group header={<Header mode=\"secondary\">Размер таблицы</Header>}>\r\n          <Div>\r\n            <NativeSelect\r\n              defaultValue={currentSide}\r\n              onChange={handleSideChange}\r\n            >\r\n              {Object.keys(sides).map((key, index) => (\r\n                <option value={key} key={index}>\r\n                  {sides[key]}\r\n                </option>\r\n              ))}\r\n            </NativeSelect>\r\n          </Div>\r\n        </Group>\r\n\r\n        <Group\r\n          header={<Header mode=\"secondary\">Цветовая палитра таблицы</Header>}\r\n        >\r\n          <Div>\r\n            <NativeSelect\r\n              defaultValue={currentTheme}\r\n              onChange={handleThemeChange}\r\n            >\r\n              {Object.keys(themes).map((key, index) => (\r\n                <option value={key} key={index}>\r\n                  {themes[key]}\r\n                </option>\r\n              ))}\r\n            </NativeSelect>\r\n          </Div>\r\n        </Group>\r\n\r\n        <FormItem>\r\n          <SimpleCell\r\n            disabled\r\n            after={\r\n              <Switch\r\n                defaultChecked={isVibrationOn ? true : false}\r\n                onClick={handleVibrationChange}\r\n              />\r\n            }\r\n          >\r\n            Виброотклик\r\n          </SimpleCell>\r\n          <SimpleCell\r\n            disabled\r\n            after={\r\n              <Switch\r\n                defaultChecked={isHintOn ? true : false}\r\n                onClick={handleHintChange}\r\n              />\r\n            }\r\n          >\r\n            Подсказка\r\n          </SimpleCell>\r\n        </FormItem>\r\n\r\n        {devMode && (\r\n          <FormItem top=\"Тестовая информация\">\r\n            <div>current mode: {currentMode}</div>\r\n            <div>current side: {currentSide}</div>\r\n            <div>theme: {currentTheme}</div>\r\n            <div>vibration: {isVibrationOn ? \"true\" : \"false\"}</div>\r\n            <div>hint: {isHintOn ? \"true\" : \"false\"}</div>\r\n          </FormItem>\r\n        )}\r\n      </FormLayout>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { Div, FormItem, Input } from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\n\r\nconst Game = ({ devMode, state }) => {\r\n  return (\r\n    <Div>\r\n      {devMode && state && (\r\n        <FormItem top=\"Тестовая информация\">\r\n          <div>current mode: {state.mode}</div>\r\n          <div>current side: {state.side}</div>\r\n          <div>theme: {state.theme}</div>\r\n          <div>vibration: {state.vibrationOn}</div>\r\n          <div>hint: {state.hintOn}</div>\r\n        </FormItem>\r\n      )}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\n\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport Header from \"@vkontakte/vkui/dist/components/Header/Header\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport { Cell } from \"@vkontakte/vkui/dist/components/Cell/Cell\";\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\nimport Epic from \"@vkontakte/vkui/dist/components/Epic/Epic\";\nimport Tabbar from \"@vkontakte/vkui/dist/components/Tabbar/Tabbar\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport TabbarItem from \"@vkontakte/vkui/dist/components/TabbarItem/TabbarItem\";\nimport Placeholder from \"@vkontakte/vkui/dist/components/Placeholder/Placeholder\";\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\nimport Separator from \"@vkontakte/vkui/dist/components/Separator/Separator\";\nimport Tabs from \"@vkontakte/vkui/dist/components/Tabs/Tabs\";\nimport TabsItem from \"@vkontakte/vkui/dist/components/TabsItem/TabsItem\";\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\nimport bridge from \"@vkontakte/vk-bridge\";\n\nimport Settings from \"./Settings\";\nimport Game from \"./Game\";\nimport { fetchData, STORAGE_KEYS, isStateChanged } from \"../store\";\n\nimport {\n  Icon28NewsfeedOutline,\n  Icon28ServicesOutline,\n  Icon28MessageOutline,\n  Icon28ClipOutline,\n  Icon28UserCircleOutline,\n  Icon56NewsfeedOutline,\n  Icon24GearOutline,\n  Icon24Square4Outline,\n} from \"@vkontakte/icons\";\n\nconst DEV_MODE = true;\n\nconst Home = ({ id, go, fetchedUser }) => {\n  const [activeStory, setActiveStory] = React.useState(\"game\");\n  const [state, setState] = React.useState(null);\n  const onStoryChange = (e) => setActiveStory(e);\n\n  React.useEffect(() => {\n    fetchData(STORAGE_KEYS).then((result) => {\n      setState({\n        theme: result.keys[0].value,\n        side: result.keys[1].value,\n        mode: result.keys[2].value,\n        vibrationOn: result.keys[3].value,\n        hintOn: result.keys[4].value,\n      });\n    });\n    //console.log(state);\n  }, [isStateChanged]);\n\n  //console.log(state);\n  return (\n    <Panel id={id}>\n      <Epic\n        activeStory={activeStory}\n        tabbar={\n          <Tabbar>\n            <TabbarItem\n              onClick={() => onStoryChange(\"game\")}\n              selected={activeStory === \"game\"}\n              text=\"Игра\"\n            >\n              <Icon24Square4Outline />\n            </TabbarItem>\n            <TabbarItem\n              onClick={() => onStoryChange(\"settings\")}\n              selected={activeStory === \"settings\"}\n              text=\"Настройки\"\n            >\n              <Icon24GearOutline />\n            </TabbarItem>\n          </Tabbar>\n        }\n      >\n        <View id=\"game\" activePanel=\"game\">\n          <Panel id=\"game\">\n            <PanelHeader>Игра</PanelHeader>\n            <Group>\n              <Game devMode={DEV_MODE} state={state} />\n            </Group>\n          </Panel>\n        </View>\n        <View id=\"settings\" activePanel=\"settings\">\n          <Panel id=\"settings\">\n            <PanelHeader>Настройки</PanelHeader>\n            <Group>\n              <Settings\n                devMode={DEV_MODE}\n                keys={STORAGE_KEYS}\n                fetchedData={state}\n              />\n            </Group>\n          </Panel>\n        </View>\n      </Epic>\n    </Panel>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\n\nimport persik from \"../img/persik.png\";\nimport \"./Persik.css\";\n\nconst Persik = ({ id, go }) => (\n  <Panel id={id}>\n    <PanelHeader left={<PanelHeaderBack onClick={() => go(\"home\")} />}>\n      Persik\n    </PanelHeader>\n    <img className=\"Persik\" src={persik} alt=\"Persik The Cat\" />\n  </Panel>\n);\n\nexport default Persik;\n","import React from \"react\";\r\n\r\nfunction T({ text }) {\r\n  return <div>{text}</div>;\r\n}\r\n\r\nexport default T;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\r\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\r\nimport Header from \"@vkontakte/vkui/dist/components/Header/Header\";\r\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\r\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\r\nimport { Cell } from \"@vkontakte/vkui/dist/components/Cell/Cell\";\r\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\r\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\r\nimport Epic from \"@vkontakte/vkui/dist/components/Epic/Epic\";\r\nimport Tabbar from \"@vkontakte/vkui/dist/components/Tabbar/Tabbar\";\r\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\r\nimport TabbarItem from \"@vkontakte/vkui/dist/components/TabbarItem/TabbarItem\";\r\nimport Placeholder from \"@vkontakte/vkui/dist/components/Placeholder/Placeholder\";\r\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\r\nimport Separator from \"@vkontakte/vkui/dist/components/Separator/Separator\";\r\nimport Tabs from \"@vkontakte/vkui/dist/components/Tabs/Tabs\";\r\nimport TabsItem from \"@vkontakte/vkui/dist/components/TabsItem/TabsItem\";\r\n\r\nimport {\r\n  Icon28NewsfeedOutline,\r\n  Icon28ServicesOutline,\r\n  Icon28MessageOutline,\r\n  Icon28ClipOutline,\r\n  Icon28UserCircleOutline,\r\n  Icon56NewsfeedOutline,\r\n} from \"@vkontakte/icons\";\r\n\r\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\r\nimport T from \"./T\";\r\n\r\nconst Test = ({ id, go }) => {\r\n  const [activeStory, setActiveStory] = React.useState(\"feed\");\r\n  const onStoryChange = (e) => setActiveStory(e);\r\n\r\n  return (\r\n    <View activePanel=\"new-user\">\r\n      <Panel id=\"new-user\">\r\n        <PanelHeader>Регистрация</PanelHeader>\r\n        <Group>\r\n          <FormLayout>\r\n            <FormItem\r\n              top=\"E-mail\"\r\n              status={email ? \"valid\" : \"error\"}\r\n              bottom={\r\n                email\r\n                  ? \"Электронная почта введена верно!\"\r\n                  : \"Пожалуйста, введите электронную почту\"\r\n              }\r\n            >\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n              />\r\n            </FormItem>\r\n\r\n            <FormItem top=\"Пароль\">\r\n              <Input type=\"password\" placeholder=\"Введите пароль\" />\r\n            </FormItem>\r\n\r\n            <FormItem bottom=\"Пароль может содержать только латинские буквы и цифры.\">\r\n              <Input type=\"password\" placeholder=\"Повторите пароль\" />\r\n            </FormItem>\r\n\r\n            <FormLayoutGroup mode=\"horizontal\">\r\n              <FormItem top=\"Имя\">\r\n                <Input />\r\n              </FormItem>\r\n              <FormItem top=\"Фамилия\">\r\n                <Input />\r\n              </FormItem>\r\n            </FormLayoutGroup>\r\n\r\n            {!this.state.showPatronym ? (\r\n              <CellButton onClick={() => this.setState({ showPatronym: true })}>\r\n                Указать отчество\r\n              </CellButton>\r\n            ) : (\r\n              <FormItem\r\n                removable\r\n                onRemove={this.onRemove}\r\n                top=\"Отчество\"\r\n                bottom=\"Если у вас нет отчества — удалите этот пункт.\"\r\n              >\r\n                <Input />\r\n              </FormItem>\r\n            )}\r\n\r\n            <FormItem top=\"Пол\">\r\n              <Select\r\n                placeholder=\"Выберите пол\"\r\n                options={[\r\n                  {\r\n                    value: \"0\",\r\n                    label: \"Мужской\",\r\n                  },\r\n                  {\r\n                    value: \"1\",\r\n                    label: \"Женский\",\r\n                  },\r\n                ]}\r\n              />\r\n            </FormItem>\r\n\r\n            <FormItem top=\"Тип документа\">\r\n              <Radio name=\"type\">Паспорт</Radio>\r\n              <Radio name=\"type\">Загран</Radio>\r\n            </FormItem>\r\n\r\n            {this.addressItems.map(({ label, name }) => (\r\n              <FormItem top={label} key={name}>\r\n                <Input name={name} />\r\n              </FormItem>\r\n            ))}\r\n            <FormItem\r\n              top=\"Цель поездки\"\r\n              bottom={purpose ? \"\" : \"Пожалуйста, укажите цель поездки\"}\r\n              status={purpose ? \"valid\" : \"error\"}\r\n            >\r\n              <Select\r\n                placeholder=\"Выберите цель поездки\"\r\n                onChange={this.onChange}\r\n                value={purpose}\r\n                name=\"purpose\"\r\n                options={[\r\n                  {\r\n                    value: \"0\",\r\n                    label: \"Бизнес или работа\",\r\n                  },\r\n                  {\r\n                    value: \"1\",\r\n                    label: \"Индивидуальный туризм\",\r\n                  },\r\n                  {\r\n                    value: \"2\",\r\n                    label: \"Посещение близких родственников\",\r\n                  },\r\n                ]}\r\n              />\r\n            </FormItem>\r\n            <FormItem top=\"О себе\">\r\n              <Textarea />\r\n            </FormItem>\r\n            <Checkbox>\r\n              Согласен со всем <Link>этим</Link>\r\n            </Checkbox>\r\n            <FormItem>\r\n              <Button size=\"l\" stretched>\r\n                Зарегистрироваться\r\n              </Button>\r\n            </FormItem>\r\n          </FormLayout>\r\n        </Group>\r\n      </Panel>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\nimport Persik from \"./panels/Persik\";\nimport Test from \"./panels/Test\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = (path) => {\n    setActivePanel(path);\n  };\n  //popout = popout;\n  return (\n    <View activePanel={activePanel}>\n      <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\n      <Persik id=\"persik\" go={go} />\n      <Test id=\"testtab\" go={go} />\n    </View>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}