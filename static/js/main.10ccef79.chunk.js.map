{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","Panel","PanelHeader","Group","header","Header","mode","Cell","before","photo_200","Avatar","src","description","city","title","first_name","last_name","Div","Button","stretched","size","onClick","data-to","Persik","props","left","PanelHeaderBack","className","persik","alt","App","useState","activePanel","setActivePanel","setUser","useEffect","a","bridge","send","user","setPopout","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","View","ReactDOM","render","getElementById"],"mappings":"qlBAmEeA,EAvDF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACX,eAACC,EAAA,EAAD,CAAOH,GAAIA,EAAX,UACE,cAACI,EAAA,EAAD,sBACCF,GACC,cAACG,EAAA,EAAD,CACEC,OACE,cAACC,EAAA,EAAD,CAAQC,KAAK,YAAb,8CAFJ,SAKE,cAACC,EAAA,EAAD,CACEC,OACER,EAAYS,UACV,cAACC,EAAA,EAAD,CAAQC,IAAKX,EAAYS,YACvB,KAENG,YACEZ,EAAYa,MAAQb,EAAYa,KAAKC,MACjCd,EAAYa,KAAKC,MACjB,GATR,mBAYMd,EAAYe,WAZlB,YAYgCf,EAAYgB,eAKhD,cAACb,EAAA,EAAD,CAAOC,OAAQ,cAACC,EAAA,EAAD,CAAQC,KAAK,YAAb,gCAAf,SACE,cAACW,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,IACLd,KAAK,YACLe,QAAStB,EACTuB,UAAQ,SALV,gD,SCxCO,MAA0B,mCC0B1BC,G,OAhBA,SAAAC,GAAK,OACnB,eAACvB,EAAA,EAAD,CAAOH,GAAI0B,EAAM1B,GAAjB,UACC,cAACI,EAAA,EAAD,CACCuB,KAAM,cAACC,EAAA,EAAD,CAAiBL,QAASG,EAAMzB,GAAIuB,UAAQ,SADnD,oBAKA,qBAAKK,UAAU,SAAShB,IAAKiB,EAAQC,IAAI,wBCyB5BC,EAjCH,WAAO,IAAD,EACsBC,mBAAS,QAD/B,mBACTC,EADS,KACIC,EADJ,OAEeF,mBAAS,MAFxB,mBAET/B,EAFS,KAEIkC,EAFJ,KAKhBC,qBAAU,WAAM,4CAQd,4BAAAC,EAAA,sEACqBC,IAAOC,KAAK,uBADjC,OACQC,EADR,OAEEL,EAAQK,GACRC,UAAU,MAHZ,4CARc,sBACdH,IAAOI,WAAU,YAAiC,IAAD,IAA7BC,OAAUC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,KAClC,GAAa,yBAATD,EAAiC,CACnC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAL5B,mCAadQ,KACC,IAEH,IAAMtD,EAAK,SAACuD,GACVrB,EAAeqB,EAAEC,cAAcC,QAAQC,KAGzC,OACE,eAACC,EAAA,EAAD,CAAM1B,YAAaA,EAAnB,UACE,cAAC,EAAD,CAAMlC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,cAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,QC7B9BsC,IAAOC,KAAK,gBAEZqB,IAASC,OAAO,cAAC,EAAD,IAASd,SAASe,eAAe,W","file":"static/js/main.10ccef79.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport Header from \"@vkontakte/vkui/dist/components/Header/Header\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport { Cell } from \"@vkontakte/vkui/dist/components/Cell/Cell\";\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n  <Panel id={id}>\n    <PanelHeader>Example</PanelHeader>\n    {fetchedUser && (\n      <Group\n        header={\n          <Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>\n        }\n      >\n        <Cell\n          before={\n            fetchedUser.photo_200 ? (\n              <Avatar src={fetchedUser.photo_200} />\n            ) : null\n          }\n          description={\n            fetchedUser.city && fetchedUser.city.title\n              ? fetchedUser.city.title\n              : \"\"\n          }\n        >\n          {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n        </Cell>\n      </Group>\n    )}\n\n    <Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n      <Div>\n        <Button\n          stretched\n          size=\"l\"\n          mode=\"secondary\"\n          onClick={go}\n          data-to=\"persik\"\n        >\n          Show me the Persik, please\n        </Button>\n      </Div>\n    </Group>\n  </Panel>\n);\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\nimport Persik from \"./panels/Persik\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  //const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n  //popout={popout}\n  return (\n    <View activePanel={activePanel}>\n      <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\n      <Persik id=\"persik\" go={go} />\n    </View>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}